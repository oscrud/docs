(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{181:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return o})),t.d(r,"metadata",(function(){return c})),t.d(r,"rightToc",(function(){return s})),t.d(r,"default",(function(){return p}));var n=t(2),i=t(9),a=(t(0),t(209)),o={title:"Register Binder",sidebar_label:"Register Binder",keywords:["documentation","oscrud","binder"],description:"registering binder to oscrud server"},c={id:"server/register-binder",isDocsHomePage:!1,title:"Register Binder",description:"registering binder to oscrud server",source:"@site/docs/server/register-binder.md",permalink:"/docs/server/register-binder",lastUpdatedBy:"Oskang09",lastUpdatedAt:1596030521,sidebar_label:"Register Binder",sidebar:"defaultSidebar",previous:{title:"Using Options",permalink:"/docs/server/use-options"},next:{title:"Register Trasnport",permalink:"/docs/server/register-transport"}},s=[],u={rightToc:s};function p(e){var r=e.components,t=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},u,t,{components:r,mdxType:"MDXLayout"}),Object(a.b)("p",null,"For register data binding method for specific struct / array / slice. Incoming data can be any type so suggested to be make a switch-case statement with default by handling other type that not supported ( usually just a string from 'header', 'query', 'body' or 'param' )."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-go"}),'package main\n\nimport (\n    "log"\n    "fmt"\n    "github.com/oscrud/oscrud"\n)\n\ntype AnyStruct struct {\n    Data string\n}\n\nfunc main() {\n    server := oscrud.NewOscrud()\n    \n    // register from string to AnyStruct\n    server.RegisterBinder(string(""), AnyStruct{}, func(raw interface{}) (interface{}, error) {\n        return AnyStruct{fmt.Sprintf(raw)}\n    })\n\n    // register from AnyStruct to string\n    // without this will will parse automatically with fmt.Sprintf("%v", raw)\n    server.RegisterBinder(AnyStruct{}, string(""), func(raw interface{}) (interface{}, error) {\n        strct := raw.(AnyStruct)\n        return strct.Data\n    })\n}\n')))}p.isMDXComponent=!0},209:function(e,r,t){"use strict";t.d(r,"a",(function(){return l})),t.d(r,"b",(function(){return g}));var n=t(0),i=t.n(n);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=i.a.createContext({}),p=function(e){var r=i.a.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},l=function(e){var r=p(e.components);return i.a.createElement(u.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return i.a.createElement(i.a.Fragment,{},r)}},f=i.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(t),f=n,g=l["".concat(o,".").concat(f)]||l[f]||d[f]||a;return t?i.a.createElement(g,c(c({ref:r},u),{},{components:t})):i.a.createElement(g,c({ref:r},u))}));function g(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,o=new Array(a);o[0]=f;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var u=2;u<a;u++)o[u]=t[u];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);